name: Toggle EventBridge Scheduler

on:
  workflow_dispatch:
    inputs:
      scheduler_name:
        description: 'Tên scheduler rule'
        required: true
      desired_state:
        description: 'Trạng thái muốn chuyển (ENABLED hoặc DISABLED)'
        required: true
        default: 'DISABLED'

jobs:
  toggle-scheduler:
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read

    env:
      AWS_REGION: ap-southeast-1

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Assume IAM Role for AWS access
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::022269452713:role/GitHubActionsAthenaRole
          aws-region: ap-southeast-1

      - name: Check if scheduler exists
        id: check_scheduler
        run: |
          set -e
          echo "Checking if scheduler '${{ github.event.inputs.scheduler_name }}' exists..." >> $GITHUB_STEP_SUMMARY
          if aws scheduler get-schedule \
              --name "${{ github.event.inputs.scheduler_name }}" \
              --group-name default > result.json 2> err.log; then
              echo "Scheduler found." >> $GITHUB_STEP_SUMMARY
          else
              echo "ERROR: Scheduler '${{ github.event.inputs.scheduler_name }}' does not exist." >> $GITHUB_STEP_SUMMARY
              cat err.log
              exit 1
          fi

      - name: Toggle scheduler state
        id: toggle
        run: |
          set -e
          echo "Toggling scheduler '${{ github.event.inputs.scheduler_name }}' to state '${{ github.event.inputs.desired_state }}'..." >> $GITHUB_STEP_SUMMARY

          aws scheduler update-schedule \
            --name "${{ github.event.inputs.scheduler_name }}" \
            --group-name default \
            --state "${{ github.event.inputs.desired_state }}" \
            > update_output.json 2> update_error.log

          echo "Scheduler state updated successfully." >> $GITHUB_STEP_SUMMARY

      - name: Output success log
        run: |
          echo "✅ SUCCESS: Scheduler '${{ github.event.inputs.scheduler_name }}' set to '${{ github.event.inputs.desired_state }}'."
          cat update_output.json

      - name: Output error log on failure
        if: failure()
        run: |
          echo "❌ FAILED to update scheduler." >> $GITHUB_STEP_SUMMARY
          echo "--- Error Log ---"
          cat update_error.log || echo "No error log found." >> $GITHUB_STEP_SUMMARY
